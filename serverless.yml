service: loan-matching-system

frameworkVersion: '4'

provider:
  name: aws
  runtime: python3.9
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
    DB_HOST: ${env:DB_HOST}
    DB_NAME: ${env:DB_NAME}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    N8N_WEBHOOK_URL: ${env:N8N_WEBHOOK_URL}
    GEMINI_API_KEY: ${env:GEMINI_API_KEY}
    SES_FROM_EMAIL: ${env:SES_FROM_EMAIL}
    SES_REGION: ${env:SES_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - ses:SendEmail
        - ses:SendRawEmail
        - rds:DescribeDBInstances
      Resource: "*"

functions:
  apiHandler:
    handler: api_server.lambda_handler
    timeout: 30
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
      - httpApi:
          path: /
          method: ANY

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    strip: false
    layer: true
    noDeploy:
      - boto3
      - botocore
      - docutils
      - jmespath
      - python-dateutil
      - s3transfer
      - six
      - urllib3
    pipCmdExtraArgs:
      - --no-cache-dir
      - --compile

plugins:
  - serverless-python-requirements
